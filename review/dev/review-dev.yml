spring:
    application:
        name: review
    #zipkin:
        #enabled: true
        #base-url: http://localhost:9411
        #locator:
            #discovery:
                #enabled: true
    #sleuth:
        #enabled: true
        #sampler:
            #probability: 1.0
    datasource:
        username: postgres
        password: postgres
        #url: jdbc:postgresql://localhost:5432/sales-back
        url: jdbc:h2:mem:testdb
    jpa:
        #properties:
            #hibernate:
                #dialect: org.hibernate.dialect.PostgreSQLDialect
        hibernate:
            ddl-auto: create
        database-platform: org.hibernate.dialect.H2Dialect
        
    cloud:
        loadbalancer:
            ribbon:
                enabled: false
    cache:
        type: redis
    data:
        redis:
            #host: 192.168.56.1
            port: 6379
            timeout: 2000
            #password: admin
        
resilience4j.circuitbreaker:
    instances:
        productservice:
            # registerHealthIndicator: true
            # ringBufferSizeInClosedState: 5
            # ringBufferSizeInHalfOpenState: 3
            # waitDurationInOpenState: 7s
            # failureRateThreshold: 50
            registerHealthIndicator: true
            failureRateThreshold: 50
            minimumNumberOfCalls: 5
            automaticTransitionFromOpenToHalfOpenEnabled: true
            waitDurationInOpenState: 7s
            permittedNumberOfCallsInHalfOpenState: 3
            slidingWindowSize: 10
            slidingWindowType: COUNT_BASED
            recordExceptions:
                - org.springframework.web.client.HttpServerErrorException
                - java.io.IOException
                - java.lang.IllegalStateException
                - java.util.concurrent.TimeoutException
                - org.springframework.web.client.ResourceAccessException
                - java.lang.RuntimeException
                - java.lang.Throwable
        # getProductNameBreaker:
        #     registerHealthIndicator: true
        #     ringBufferSizeInClosedState: 5
        #     ringBufferSizeInHalfOpenState: 3
        #     waitDurationInOpenState: 10s
        #     failureRateThreshold: 5
        #     recordExceptions:
        #         - org.springframework.web.client.HttpServerErrorException
        #         - java.io.IOException
        #         - java.lang.IllegalStateException
        #         - java.util.concurrent.TimeoutException
        #         - org.springframework.web.client.ResourceAccessException
        #         - java.lang.RuntimeException
        # updateProductBreaker:
        #     registerHealthIndicator: true
        #     ringBufferSizeInClosedState: 5
        #     ringBufferSizeInHalfOpenState: 3
        #     waitDurationInOpenState: 10s
        #     failureRateThreshold: 5

#resilience4j.thread-pool-bulkhead   
resilience4j.bulkhead:
    instances:
        bulk_productservice:
            maxWaitDuration: 2ms
            maxConcurrentCalls: 10
            # maxThreadPoolSize: 100
            # coreThreadPoolSize: 3
            # queueCapacity: 100

resilience4j.retry:
    instances:
        retry_productservice:
            maxRetryAttempts: 5
            waitDuration: 10000
            retry-exceptions:
                - java.util.concurrent.TimeoutException
                - java.net.ConnectException
                - java.lang.Throwable
                - org.springframework.web.client.HttpServerErrorException
                - java.io.IOException
                
resilience4j.ratelimiter:
    instances:
        rate_productservice:
            timeoutDuration: 1000ms
            limitRefreshPeriod: 5000
            limitForPeriod: 5

eureka:
    client:
        fetch-register: true
        register-with-eureka: true
        defaultZone: http://localhost:8761/eureka
    instance:
        preferIpAddress: true
        lease-renewal-interval-in-seconds: 2
        lease-expiration-duration-in-seconds: 5

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    circuitbreakers:
      enabled: true
    health:
      show-details: ALWAYS
  health:
    circuitbreakers:
      enabled: true



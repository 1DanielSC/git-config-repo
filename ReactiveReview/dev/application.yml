spring:
    data:
        mongodb:
            uri: mongodb://localhost:27017/review_db
            auto-index-creation: true
    r2dbc:
      #url: r2dbc:h2:mem:testdb
      url: r2dbc:postgresql://localhost:5432/reviewr2
      username: postgres
      password: postgres

eureka:
    client:
        fetch-register: true
        register-with-eureka: true
        defaultZone: http://localhost:8761/eureka
    instance:
        preferIpAddress: true
        lease-renewal-interval-in-seconds: 2
        lease-expiration-duration-in-seconds: 5

resilience4j.circuitbreaker:
    instances:
        productservice:
            registerHealthIndicator: true
            failureRateThreshold: 50
            minimumNumberOfCalls: 5
            automaticTransitionFromOpenToHalfOpenEnabled: true
            waitDurationInOpenState: 7s
            permittedNumberOfCallsInHalfOpenState: 3
            slidingWindowSize: 10
            slidingWindowType: COUNT_BASED
            recordExceptions:
                - org.springframework.web.client.HttpServerErrorException
                - java.io.IOException
                - java.lang.IllegalStateException
                - java.util.concurrent.TimeoutException
                - org.springframework.web.client.ResourceAccessException
                - java.lang.RuntimeException
                - java.lang.Throwable

#resilience4j.thread-pool-bulkhead   
resilience4j.bulkhead:
    instances:
        bulk_productservice:
            registerHealthIndicator: true
            maxWaitDuration: 2ms
            maxConcurrentCalls: 10
            # maxThreadPoolSize: 100
            # coreThreadPoolSize: 3
            # queueCapacity: 100

resilience4j.retry:
    instances:
        retry_productservice:
            registerHealthIndicator: true
            maxRetryAttempts: 5
            waitDuration: 10000
            retry-exceptions:
                - java.util.concurrent.TimeoutException
                - java.net.ConnectException
                - java.lang.Throwable
                - org.springframework.web.client.HttpServerErrorException
                - java.io.IOException

resilience4j.ratelimiter:
    instances:
        rate_productservice:
            registerHealthIndicator: true
            timeoutDuration: 1000ms
            limitRefreshPeriod: 5000
            limitForPeriod: 5


management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS
  health:
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: true